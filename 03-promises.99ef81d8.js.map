{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAkCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA1CAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,OAAOC,SAE7C,IAAIC,EAAeC,OAAON,EAAMO,OAEhC,IAAK,IAAIC,EAAI,EAAGA,GAAKN,EAAOK,MAAOC,GAAK,EACtCvB,EAAcuB,EAAGH,GACdI,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBuB,QAAQC,IAAI,uBAAqBzB,QAAiBC,OAClDyB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqB5B,QAAiBC,MAAU,IAGnD4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClBuB,QAAQC,IAAI,sBAAoBzB,QAAiBC,OACjDyB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoB9B,QAAiBC,MAAU,IAIrDkB,GAAgBC,OAAOL,EAAKM,OAG9BT,EAAMK,OAAOc,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.target.elements;\n\n  let currentDelay = Number(delay.value);\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    currentDelay += Number(step.value);\n  }\n\n  event.target.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n/* \n\nДля заборони ввода відємних значень для delay та amount\n\nform.addEventListener('input', onFormInput);\n\nfunction onFormInput(event) {\n  const { delay, amount } = event.currentTarget.elements;\n\n  if (delay.value < 0 && delay.value) {\n    alert('❌ The field value must be a positive number or 0');\n    delay.value = 0;\n  }\n\n  if (amount.value <= 0 && amount.value) {\n    alert('❌ The field value must be a positive number');\n    amount.value = 1;\n  }\n} */\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","step","amount","target","elements","currentDelay","Number","value","i","then","console","log","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.99ef81d8.js.map"}