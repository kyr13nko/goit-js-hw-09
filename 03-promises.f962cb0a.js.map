{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SA2DpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAnEbL,EAAKa,iBAAiB,UA6BtB,SAAsBC,GACpBA,EAAMC,iBAEN,MAAQV,MAAAW,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,OAAOC,SAE7C,IAAIC,EAAeC,OAAON,EAAMO,OAEhC,IAAK,IAAIC,EAAI,EAAGA,GAAKN,EAAOK,MAAOC,GAAK,EACtCrB,EAAcqB,EAAGH,GACdI,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBqB,QAAQC,IAAI,uBAAqBvB,QAAiBC,OAClDuB,EAAA9B,GAAS+B,OAAOC,QACd,uBAAqB1B,QAAiBC,MAAU,IAGnD0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBqB,QAAQC,IAAI,sBAAoBvB,QAAiBC,OACjDuB,EAAA9B,GAAS+B,OAAOG,QACd,sBAAoB5B,QAAeC,MAAU,IAInDgB,GAAgBC,OAAOL,EAAKM,OAG9BT,EAAMK,OAAOc,O,IArDfjC,EAAKa,iBAAiB,SAEtB,SAAqBC,GACnB,MAAMT,MAAEA,EAAKY,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMoB,cAAcd,SAEhDf,EAAMkB,MAAQ,GAAKlB,EAAMkB,QAE3BK,EAAA9B,GAAS+B,OAAOG,QACd,oDAEF3B,EAAMkB,MAAQ,GAGZN,EAAKM,MAAQ,GAAKN,EAAKM,QAEzBK,EAAA9B,GAAS+B,OAAOG,QACd,oDAEFf,EAAKM,MAAQ,GAGXL,EAAOK,OAAS,GAAKL,EAAOK,QAE9BK,EAAA9B,GAAS+B,OAAOG,QAAQ,+CACtBd,EAAKK,MAAQ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\nform.addEventListener('input', onFormInput);\n\nfunction onFormInput(event) {\n  const { delay, step, amount } = event.currentTarget.elements;\n\n  if (delay.value < 0 && delay.value) {\n    // alert('❌ The field value must be a positive number or 0');\n    Notiflix.Notify.failure(\n      '❌ The field value must be a positive number or 0'\n    );\n    delay.value = 0;\n  }\n\n  if (step.value < 0 && step.value) {\n    // alert('❌ The field value must be a positive number or 0');\n    Notiflix.Notify.failure(\n      '❌ The field value must be a positive number or 0'\n    );\n    step.value = 0;\n  }\n\n  if (amount.value <= 0 && amount.value) {\n    // alert('❌ The field value must be a positive number');\n    Notiflix.Notify.failure('❌ The field value must be a positive number');\n    amount.value = 1;\n  }\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.target.elements;\n\n  let currentDelay = Number(delay.value);\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    currentDelay += Number(step.value);\n  }\n\n  event.target.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","step","amount","target","elements","currentDelay","Number","value","i","then","console","log","$parcel$interopDefault","Notify","success","catch","failure","reset","currentTarget"],"version":3,"file":"03-promises.f962cb0a.js.map"}